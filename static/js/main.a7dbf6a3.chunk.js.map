{"version":3,"sources":["components/utils/FetchData.js","GlobalState.js","components/utils/Rating/index.js","components/utils/FormInput/index.js","components/utils/CommentItem/CommentCard.js","components/utils/CommentItem/index.js","components/utils/images/loading.gif","components/body/detailProduct/Detail.js","components/utils/ProductCard/index.js","components/body/products/Product.js","App.js","reportWebVitals.js","index.js"],"names":["getData","url","a","axios","method","patchData","data","headers","DataContext","createContext","DataProvider","children","useState","products","setProducts","socket","setSocket","useEffect","then","res","status","catch","err","console","log","io","transports","close","state","Provider","value","rate","Rating","props","product","numReviews","rating","style_star","clipPath","className","style","FormInput","nameRef","useRef","contentRef","id","type","ref","contentEditable","height","border","padding","outline","onClick","username","current","content","innerHTML","trim","alert","textContent","length","Date","toISOString","emit","product_id","submitComment","CommentCard","comment","name","moment","createdAt","fromNow","toLocaleString","dangerouslySetInnerHTML","__html","showComments","CommentItem","item","reply","setReply","setName","replyComment","setReplyComment","hideReplyComment","setHideReplyComment","next","setNext","start","slice","loopWithSlice","handleReply","map","rep","_id","send","Detail","useParams","setProduct","setRating","comments","setComments","loading","setLoading","useContext","page","find","x","result","on","off","src","images","alt","title","price","description","onChange","htmlFor","Loading","ProductCard","to","Product","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7dbf6a3.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst getData = async (url) => {\r\n    return await axios({\r\n        method: \"GET\",\r\n        url: url,\r\n    });\r\n}\r\n\r\nconst patchData = async (url, data) => {\r\n    return await axios({\r\n        method: \"PATCH\",\r\n        url: url,\r\n        data: data,\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n}\r\n\r\nexport {\r\n    getData,\r\n    patchData\r\n}","import React, { createContext, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { getData } from './components/utils/FetchData';\r\nconst DataContext = createContext();\r\n\r\nconst DataProvider = ({ children }) => {\r\n    const [products, setProducts] = useState([]);\r\n    const [socket, setSocket] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getData(\"/api/product\")\r\n            .then((res) => {\r\n                if (res.data && res.status) {\r\n                    setProducts(res.data.data);\r\n                }\r\n            }).catch((err) => {\r\n                console.log(\"err\", err);\r\n            })\r\n        const socket = io('ws://localhost:4000', { transports: [\"websocket\"] })\r\n        setSocket(socket);\r\n        return () => socket.close();\r\n    }, [])\r\n\r\n    const state = {\r\n        products: [\r\n            products,\r\n            setProducts\r\n        ],\r\n        socket,\r\n    }\r\n\r\n    return (\r\n        <DataContext.Provider value={state}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n\r\nexport {\r\n    DataContext,\r\n    DataProvider\r\n}","import React from 'react'\r\nimport './index.css';\r\n\r\nlet rate = 0;\r\nfunction Rating(props) {\r\n    const { product } = props;\r\n\r\n    if (props.numReviews) {\r\n        rate = 100 - (product.rating / product.numReviews * 20)\r\n    } else {\r\n        rate = 100 - (product.rating * 20)\r\n    }\r\n\r\n    const style_star = {\r\n        clipPath: product.rating === 0 ? `inset(0 100% 0 0)` : `inset(0 ${rate}% 0 0)`\r\n    }\r\n    // console.log(\"product in Rating\", product);\r\n    // const rate = 100 - (product.rating / product.numReviews * 20);\r\n    // console.log(\"rate\", rate);\r\n    return (\r\n        <div className=\"rating\">\r\n            <div className=\"star\">\r\n                <i className=\"far fa-star\"></i>\r\n                <i className=\"far fa-star\"></i>\r\n                <i className=\"far fa-star\"></i>\r\n                <i className=\"far fa-star\"></i>\r\n                <i className=\"far fa-star\"></i>\r\n\r\n                <div className=\"star-1\" style={style_star}>\r\n                    <i className=\"fas fa-star\"></i>\r\n                    <i className=\"fas fa-star\"></i>\r\n                    <i className=\"fas fa-star\"></i>\r\n                    <i className=\"fas fa-star\"></i>\r\n                    <i className=\"fas fa-star\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React, { useRef } from \"react\";\r\nimport { patchData } from \"../FetchData\";\r\nimport \"./index.css\";\r\n\r\nlet showComments = []\r\n\r\nfunction FormInput(props) {\r\n    const nameRef = useRef();\r\n    const contentRef = useRef();\r\n    const { id, socket, rating } = props;\r\n\r\n    const submitComment = () => {\r\n        const username = nameRef.current.value;\r\n        const content = contentRef.current.innerHTML;\r\n\r\n        if (!username.trim()) {\r\n            return alert(\"Not Empty!\")\r\n        }\r\n\r\n        if (contentRef.current.textContent.trim().length < 10) {\r\n            return alert(\"Contents too short, must be at least 10 character!\")\r\n        }\r\n        const createdAt = new Date().toISOString();\r\n\r\n        socket.emit(\"createComment\", {\r\n            username,\r\n            content,\r\n            product_id: id,\r\n            rating,\r\n        });\r\n\r\n        if (rating && rating !== 0) {\r\n            patchData(`/api/product/${id}`, { rating })\r\n                .then((res) => {\r\n                    // console.log(\"res\", res);\r\n                }).catch((err) => {\r\n                    console.log(\"err\", err);\r\n                })\r\n        }\r\n        contentRef.current.innerHTML = ''\r\n    }\r\n\r\n    return (\r\n        <div className=\"form_input\">\r\n            <p>Name:</p>\r\n            <input type=\"text\" ref={nameRef} />\r\n            <p>Content:</p>\r\n            <div\r\n                ref={contentRef}\r\n                contentEditable=\"true\"\r\n                style={{\r\n                    height: \"100px\",\r\n                    border: \"1px solid gray\",\r\n                    padding: \"5px 10px\",\r\n                    outline: \"none\",\r\n                }}\r\n            />\r\n            <button onClick={() => submitComment()}>Send</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormInput;\r\n","import React from 'react'\r\nimport './index.css';\r\nimport Rating from '../Rating';\r\nimport moment from 'moment'\r\n\r\nfunction CommentCard(props) {\r\n    const { children, comment } = props;\r\n    // console.log(\"comment\", comment);\r\n    return (\r\n        <div className=\"comment_card\">\r\n            <div className=\"comment_card_row\">\r\n                <h3>{comment.name}</h3>\r\n                {\r\n                    comment.rating !== 0 && <Rating product={comment} />\r\n                }\r\n            </div>\r\n\r\n            <span>{moment(comment.createdAt).fromNow()}</span>\r\n\r\n            <span>{new Date(comment.createdAt).toLocaleString()}</span>\r\n\r\n            <p dangerouslySetInnerHTML={{ __html: comment.content }} />\r\n\r\n            {children}\r\n\r\n        </div>\r\n        // comment_card\r\n    )\r\n}\r\n\r\nexport default CommentCard\r\n","import React, { useEffect, useState } from 'react';\r\nimport './index.css';\r\nimport CommentCard from './CommentCard';\r\nimport FormInput from '../FormInput'\r\n\r\nlet showComments = []\r\n\r\nfunction CommentItem(props) {\r\n    const { item, socket } = props;\r\n    const [reply, setReply] = useState(false)\r\n    const [name, setName] = useState('')\r\n\r\n    const [replyComment, setReplyComment] = useState([])\r\n    const [hideReplyComment, setHideReplyComment] = useState([])\r\n    const [next, setNext] = useState(3)\r\n\r\n\r\n    const loadMore = () => {\r\n        setNext(next + 3)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const loopWithSlice = () => {\r\n            let start = item.reply.length - next < 0 ? 0 : item.reply.length - next\r\n\r\n            showComments = item.reply.slice(start, item.reply.length)\r\n\r\n            setHideReplyComment(start)\r\n            setReplyComment(showComments)\r\n        }\r\n\r\n        loopWithSlice(next)\r\n    }, [item.reply, next])\r\n\r\n\r\n\r\n    const handleReply = (username) => {\r\n        setReply(true)\r\n        setName(username)\r\n    }\r\n\r\n    const hideReply = () => {\r\n        setReply(false)\r\n        setNext(3)\r\n    }\r\n    return (\r\n        <>\r\n            <CommentCard comment={item}>\r\n                <div className=\"nav_comment\">\r\n                    <p onClick={() => handleReply(item.username)}>Reply</p>\r\n                    {\r\n                        hideReplyComment > 0 &&\r\n                        <p onClick={loadMore}>Load more {hideReplyComment} comments</p>\r\n                    }\r\n\r\n                    <p onClick={hideReply}>Hide Reply</p>\r\n                </div>\r\n\r\n                <div className=\"reply_comment\">\r\n                    {\r\n                        replyComment.map(rep => (\r\n                            <CommentCard comment={rep} key={rep._id}>\r\n                                <div className=\"nav_comment\">\r\n                                    <p onClick={() => handleReply(rep.username)}>Reply</p>\r\n                                </div>\r\n                            </CommentCard>\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n                {\r\n                    reply &&\r\n                    <FormInput\r\n                        id={item._id}\r\n                        socket={socket}\r\n                        name={name}\r\n                        setReply={setReply}\r\n                        send=\"replyComment\"\r\n                    />\r\n                }\r\n            </CommentCard>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CommentItem\r\n","export default __webpack_public_path__ + \"static/media/loading.b2f9bfa6.gif\";","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { DataContext } from \"../../../GlobalState\";\r\nimport Rating from \"../../utils/Rating\";\r\nimport FormInput from \"../../utils/FormInput\";\r\nimport CommentItem from \"../../utils/CommentItem\";\r\nimport \"./index.css\";\r\nimport { getData } from \"../../utils/FetchData\";\r\nimport Loading from '../../utils/images/loading.gif'\r\n\r\nfunction Detail(props) {\r\n    const { id } = useParams();\r\n    const [product, setProduct] = useState(null);\r\n    const [rating, setRating] = useState(0);\r\n    const [comments, setComments] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const state = useContext(DataContext);\r\n    const [products] = state.products;\r\n    const socket = state.socket;\r\n    const [page, setPage] = useState(1)\r\n    const pageEnd = useRef();\r\n\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            const data = products.find((x) => x._id === id);\r\n            setProduct(data);\r\n        }\r\n    }, [id, products]);\r\n\r\n    // useEffect(() => {\r\n    useState(() => {\r\n        setLoading(true);\r\n        if (id) {\r\n            getData(`/api/comment/${id}?limit=${page * 3}`)\r\n                .then((result) => {\r\n                    // console.log(\"result\", result);\r\n                    setLoading(false);\r\n                    setComments(result.data.data)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"err\", err);\r\n                });\r\n        }\r\n    }, [id, page]);\r\n\r\n    /**\r\n     * Realtime\r\n     * Join room\r\n     */\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.emit(\"joinRoom\", id)\r\n        }\r\n\r\n        return () => { }\r\n    }, [socket])\r\n\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('sendCommentToClient', (data) => {\r\n                setComments([data, ...comments]);\r\n            })\r\n            return () => socket.off(\"sendCommentToClient\")\r\n        }\r\n    }, [socket, comments])\r\n\r\n    return (\r\n        <div className=\"detail_product_page\">\r\n            {product && (\r\n                <div className=\"detail_product_card\">\r\n                    <img src={product.images.url} alt={product.title} />\r\n                    <div className=\"detail_product_cart_content\">\r\n                        <h2>{product.title}</h2>\r\n                        <span>$ {product.price}</span>\r\n                        <p>{product.description}</p>\r\n                        <button>Buy</button>\r\n                        <div>\r\n                            <h3>Rating: {product.numReviews} reviews</h3>\r\n                            <Rating product={product} />\r\n                        </div>\r\n                    </div>\r\n                    {/* detail_product_cart_content */}\r\n                </div>\r\n                // detail_product_card\r\n            )}\r\n            <div className=\"comments\">\r\n                <h2 className=\"app_title\">\r\n                    Realtime Website (chat, comments ...) with MERN Stack and Socket.io{\" \"}\r\n                </h2>\r\n                {/* app_title */}\r\n                <div className=\"reviews\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"rate\"\r\n                        id=\"rd-5\"\r\n                        onChange={() => setRating(5)}\r\n                    />\r\n                    <label htmlFor=\"rd-5\" className=\"fas fa-star\" />\r\n\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"rate\"\r\n                        id=\"rd-4\"\r\n                        onChange={() => setRating(4)}\r\n                    />\r\n                    <label htmlFor=\"rd-4\" className=\"fas fa-star\" />\r\n\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"rate\"\r\n                        id=\"rd-3\"\r\n                        onChange={() => setRating(3)}\r\n                    />\r\n                    <label htmlFor=\"rd-3\" className=\"fas fa-star\" />\r\n\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"rate\"\r\n                        id=\"rd-2\"\r\n                        onChange={() => setRating(2)}\r\n                    />\r\n                    <label htmlFor=\"rd-2\" className=\"fas fa-star\" />\r\n\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"rate\"\r\n                        id=\"rd-1\"\r\n                        onChange={() => setRating(1)}\r\n                    />\r\n                    <label htmlFor=\"rd-1\" className=\"fas fa-star\" />\r\n                </div>\r\n                {/* reviews */}\r\n                <FormInput id={id} socket={socket} rating={rating} />\r\n\r\n                <div className=\"comments_list\">\r\n                    {\r\n                        comments && comments.map((item) => (\r\n                            <CommentItem key={item._id} item={item} socket={socket} />\r\n                        ))\r\n                    }\r\n                </div>\r\n                {/* comments_list */}\r\n            </div>\r\n            {/* comments */}\r\n            {\r\n                loading && (\r\n                    <div>\r\n                        <img src={Loading} alt=\"loading\" />\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n        // detail_product_page\r\n    );\r\n}\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.css';\r\n\r\nfunction ProductCard(props) {\r\n    const { item } = props;\r\n    return (\r\n        <div className=\"product_card\">\r\n            <img src={item.images.url} alt={item.title} />\r\n            <h3>{item.title}</h3>\r\n            <span>$ {item.price}</span>\r\n            <p>{item.description}</p>\r\n            <div className=\"product_card_row\">\r\n                <Link to={`/product/${item._id}`}>View</Link>\r\n                <button>Buy Now</button>\r\n            </div>\r\n            {/* product_card_row */}\r\n        </div>\r\n        // product_card\r\n    )\r\n}\r\n\r\nexport default ProductCard\r\n","import React, { useContext } from 'react'\r\nimport { DataContext } from '../../../GlobalState'\r\nimport ProductCard from '../../utils/ProductCard';\r\nimport './Product.css';\r\n\r\nfunction Product() {\r\n    const state = useContext(DataContext);\r\n    const [products] = state.products;\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"app_title\">Realtime Website (chat, comments ...) with MERN Stack and Socket.io </h2>\r\n            <div className=\"products_page\">\r\n                {\r\n                    products && products.map((item) => (\r\n                        <ProductCard item={item} key={item._id} />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n            {/* products_page */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react';\nimport Detail from './components/body/detailProduct/Detail';\nimport Product from './components/body/products/Product';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App(props) {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Route path=\"/\" exact component={Product} />\n        <Route path=\"/product/:id\" exact component={Detail} />\n      </div>\n    </Router>\n  );\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { DataProvider } from './GlobalState';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}